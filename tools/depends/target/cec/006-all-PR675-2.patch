--- a/src/cec-client/CMakeLists.txt
+++ b/src/cec-client/CMakeLists.txt
@@ -67,7 +67,8 @@ if (NOT WIN32)
 else()
   add_definitions(-DTARGET_WINDOWS -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_WINSOCKAPI_)
   check_symbol_exists(_AMD64_ Windows.h WIN64)
-  if (WIN64 OR (${_M_ARM64}))
+  check_symbol_exists(_ARM64_ Windows.h ARM64)
+  if (WIN64 OR ARM64)
     string(REPLACE "/arch:SSE2" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
   else()
     add_definitions(-D_USE_32BIT_TIME_T)
--- a/src/cecc-client/CMakeLists.txt
+++ b/src/cecc-client/CMakeLists.txt
@@ -37,7 +37,8 @@ if (NOT WIN32)
 else()
   add_definitions(-DTARGET_WINDOWS -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_WINSOCKAPI_)
   check_symbol_exists(_AMD64_ Windows.h WIN64)
-  if (WIN64 OR (${_M_ARM64}))
+  check_symbol_exists(_ARM64_ Windows.h ARM64)
+  if (WIN64 OR ARM64)
     string(REPLACE "/arch:SSE2" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
   else()
     add_definitions(-D_USE_32BIT_TIME_T)
--- a/src/libcec/CMakeLists.txt
+++ b/src/libcec/CMakeLists.txt
@@ -161,7 +161,7 @@ if (WIN32)
   configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libcec.rc.in ${CMAKE_CURRENT_SOURCE_DIR}/libcec.rc)
   add_definitions(-DDLL_EXPORT)
   add_definitions(-DTARGET_WINDOWS -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS -D_WINSOCKAPI_)
-  if (WIN64 OR (${_M_ARM64}))
+  if (WIN64 OR ARM64)
     string(REPLACE "/arch:SSE2" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
   else()
     add_definitions(-D_USE_32BIT_TIME_T)
--- a/src/libcec/cmake/CheckPlatformSupport.cmake
+++ b/src/libcec/cmake/CheckPlatformSupport.cmake
@@ -57,6 +57,7 @@ if(WIN32)
   elseif("${MSVC_C_ARCHITECTURE_ID}" STREQUAL "ARM")
     set(LIB_INFO "${LIB_INFO} (arm)")
   elseif("${MSVC_C_ARCHITECTURE_ID}" STREQUAL "ARM64")
+    check_symbol_exists(_ARM64_ Windows.h ARM64)
     set(LIB_INFO "${LIB_INFO} (arm64)")    
   else()
     message(FATAL_ERROR "Unknown architecture id: ${MSVC_C_ARCHITECTURE_ID}")
